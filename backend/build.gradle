import java.nio.file.Paths

apply plugin: "kotlin"
apply plugin: "kotlinx-serialization"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

mainClassName = "io.ktor.server.netty.EngineMain"

sourceCompatibility = 1.8

compileKotlin.kotlinOptions.jvmTarget = '1.8'
compileTestKotlin.kotlinOptions.jvmTarget = '1.8'

dependencies {
    implementation project(":SharedCode")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"


    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializer_version"


    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"


    implementation "io.ktor:ktor-locations:$ktor_version"
    implementation "io.ktor:ktor-freemarker:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"


    implementation "ch.qos.logback:logback-classic:1.2.3"

    implementation "com.github.kittinunf.fuel:fuel:1.11.0"


    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlin_coroutines_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "io.ktor:ktor-server-test-host:$ktor_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
}

shadowJar {
    archiveClassifier.set('release')
    from({ Paths.get(project(':web').buildDir.path, 'bundle') })
}

tasks['shadowJar'].mustRunAfter clean
tasks['processResources'].mustRunAfter ':JsApp:bundle'

task release() {
    dependsOn('clean')
    dependsOn(':JsApp:bundle')
    dependsOn('shadowJar')
}
